# ` is an interesting key for a prefix
set-option -g prefix C-a

unbind-key C-b
bind-key C-a last-window
bind-key ` last-window
#bind-key a send-prefix

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
#bind-key F11 set-option -g prefix C-a
#bind-key F12 set-option -g prefix `

bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4
bind -n F5 select-window -t 5
bind -n F6 select-window -t 6
bind -n F7 select-window -t 7

# All new windows started at startup.
#new mc
#new


# 0 is too far from ` ;)
set -g base-index 1
set -g pane-base-index 1

set-option -g default-terminal "screen-256color"
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g status-keys vi
set-option -g bell-action none
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell off

setw -g mode-keys vi
setw -g mode-mouse on
setw -g monitor-activity on


bind e previous-window
bind f next-window

bind m copy-mode

set-option -g status-utf8 on
# set-option -g status-justify centre
set-option -g status-justify left
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-left-length 40

set-option -g pane-active-border-fg green
set-option -g pane-active-border-bg black
set-option -g pane-border-fg white
set-option -g pane-border-bg black

set-option -g message-fg black
set-option -g message-bg green

#setw -g mode-bg black

#setw -g window-status-bg black
#setw -g window-status-current-fg green
#setw -g window-status-alert-attr default
#setw -g window-status-alert-fg yellow

set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

set -g history-limit 4096
#setw -g aggressive-resize on
set -s escape-time 0

# Use vim keybindings in copy mode
setw -g mode-keys vi
#
# # Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# `+r reloads the configuration, handy
bind r source-file ~/.tmux.conf

set-option -g default-command "reattach-to-user-namespace -l zsh"
